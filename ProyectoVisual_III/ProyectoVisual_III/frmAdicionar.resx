<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAADBQTFRF////
        QEBAMjIyeXl5dXV1enp6PT09dnZ24+PjMDAw4ODg5OTkODg4cnJyLCwsKSkpVHC0+wAAA/JJREFUeF7t
        3O1yokAQhWEkCX4kxvu/23AEgygtA3TPdFvn2R+7W7EqdepFxnWTVERERERERERERERERERERERERERE
        RJTu1P9uKcfnEJ0u5/5Pds6XghNPx6a2nnium2Oxie3A3c544rne7YpNvA5sJ372f7fw2Q4sNvH0ex1o
        WhEFofktMLEvCGYVu4JQoOJ/QTCqeCsI2SveFQSTikNByFxxVBAMKt4XhKwVHwqCesVxQchYcWKg+sTH
        gpBt4uRA5YlTA7NNPF0mB6pOfL5EO02e16gfwqfXu91MF2zVH/0jjMkTdSpKBbMNtK5YvCBYVnRQEOwq
        uigIX0YV5YJf/SOysblQnVyiHYuKjgqCfkVXBUH7duPmJjPQreiuIGhWdFgQ9Cq6LAhaFZ0WBJ1Dw9kx
        MaZxobq9RDvbK7ouCFsrOi8I2243jm8ygy0VAxSE9RVDFIS1FYMUhP2qinLBff8IR9YcGu6PibHlF2qg
        S7SztGKwgiA/F6cmygMdPgdvlhwaYY6JsfTnYrjn4E1qxaAFIa1i2IKQcvSHOuifzVcMXRDmDo2Qx8TY
        64rhC4Jccf/yY4GIFX+an/5PjyIVBHGiJNrAxRPjDVw4MeLAF7ebZ7FuMoPkijELQmLFqAUhqWLcgpBQ
        MXJBmK0YuyDMTIw/cGbiOwxsJ0qvRNtXqW8xsKr6OVP6RwT39g1fHhjRjwqYORHjT5w98qNPFN+TGTy9
        Gx7K278uTSgIcSsmFYSoFRMLQsyKif/87US8oy4aGHHiwoHxJooDf9pf02JNlP/z5cvk+zSyE4+J67Hw
        +qMhzP33mTwxSEXxOfj/hUDyhRqi4lxBCF1xviDIFd3fUeWB4wtQruh8YlpBCFoxtSCErPjqoH8W8Haz
        pCDIE50eGinHxFiwiksLQqjn4rovpwxUcdlNZhDm0Fj+HLwJcqGuLQghKq4vCAEqbv2abfe3m20FwXlF
        ja+6lyfOfXNfBtsLguOKWt834bbilmNiTD40it5udC7Rjss7ql5BcFhRsyC4q6h1kxk4u91oFwRXFfUL
        gqOKFgXBTUWbgiC/GZK1ou4xMebi0LC6RDsOLlTLglC8ojxQ698B8nMxy8SD+HOENS7RjnShNpdD/whT
        h3r6Z0HrDZQmNnWWgVX1PTVRdeD0xKb+7j9qbqKi8sCpidkKwvfjDy03eLPh8XbTHLMVhIeK6gVhXDFr
        QTjcVzR6u+i+YnPMPHBU0aQgDBWzF4T/ioZv+N0qFigI/aFhVhC6ihmPibHrhWo6sJtY5BLttBWNB2Ji
        sYJwuFgPbCfmeS0qyfHJiw4kIiIiIiIiIiIiIiIiIiIiIiIiIiKKpar+AKOaI0EgDrmFAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>